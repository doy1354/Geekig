"""
Local settings for Accounting project.

Must be at the same directory as the settings.py file.

All variables are required unless stated otherwise using 'optional' comment
"""
# PYTHON IMPORTS
import os
# DJANGO IMPORTS
from django.core.management.utils import get_random_secret_key


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATES_DIR = os.path.join(BASE_DIR, "templates")
STATICFILES_DIR = os.path.join(BASE_DIR, "staticfiles")
STATIC_DIR = os.path.join(BASE_DIR, "static")
MEDIA_DIR = os.path.join(BASE_DIR, "media")
LOGS_DIR = os.path.join(BASE_DIR, "logs")

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "mr3g9k*$9!1)nlelpt(!h!4u*lwr3-=-d3@ws3+akr+q@mdbp%"
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Add domain name, i.e. example.com
ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    # add project domain here
]

# CORS HEADERS
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8080",
    "http://localhost:8080",
    # add project website here
]

# needed for debug toolbar
INTERNAL_IPS = [
    '127.0.0.1',
]

ENABLE_HTTPS = False

DB_CONFIG = {
    'ENGINE': os.getenv('DB_ENGINE', 'django.db.backends.postgresql'),
    'HOST': os.getenv('DB_HOST', '127.0.0.1'),
    'PORT': os.getenv('DB_PORT', 5432),
    'NAME': os.getenv('DB_NAME', 'accounting_db'),
    'USER': os.getenv('DB_USER', 'postgres'),
    'PASSWORD': os.getenv('DB_PASS', 'Atpl123#')
}

# mysql defaults:
# 'ENGINE': 'django.db.backends.mysql'
# 'PORT': 3306

# Email backend (OPTIONAL)
# Console backend is only meant for development purposes
# Please comment it for production or use the django default:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
GET_EMAIL_HOST_PASSWORD = 'kxkkruehbrzdagry'

# Celery
CELERY_BROKER_URL = 'amqp://127.0.0.1:5672/'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'


# STRIPE START
STRIPE_PUBLISHABLE = 'pk_test_51Myr1bIqRuuDncY3qFyLrnhpM2jlPBf0CjeiCzerrnnfBlsqYOV7ZFM6c008HRHigpJBX340haOYSTsvTHOyOQMN00GBiWdj40'
STRIPE_SECRET = 'sk_test_51Myr1bIqRuuDncY3cFnbDCJhceQRw83ENJUn8HDzr7t3TjrbM8pksjTmUwrSACIeiowgnnbJdYsNxJIuJsS4aShs00L71AmQaZ'

BASIC_PRICE = 'price_1NWkpVIqRuuDncY3044QzLGH'
PREMIUM_PRICE = 'price_1NWkqhIqRuuDncY3PDIDmwu6'
ADVANCE_PRICE = 'price_1NWkr8IqRuuDncY3UgN98PSP'
LIFETIME_PRICE = 'price_1NWlS8IqRuuDncY3nrIAMl5j'
# STRIPE END


# BANK API
get_client_id = 'a215286b-8159-49f1-b2b7-5a48a7ca17b4'
get_client_secret = 'e8ef1fbb-516d-4f11-b606-5dac9d0b57d5'

client_token = ''


# Social Auth
LOCAL_SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'CLIENT_ID': '',
        'SECRET': '',
    },
    'microsoft': {
        'BACKENDS': [
            '',
        ],
        'CLIENT_ID': '',
        'TENANT': '',  # Or domain (e.g., 'contoso.onmicrosoft.com')
    },
}
# Social Auth End


# Open AI account
LOCAL_OPENAI_API_KEY = os.environ.get("")

# RECAPTCHA
LOCAL_RECAPTCHA_PUBLIC_KEY = ''
LOCAL_RECAPTCHA_PRIVATE_KEY = ''
